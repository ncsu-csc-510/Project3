name: Python Test and Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    environment: api
    timeout-minutes: 15  # Add timeout for the entire job

    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    env:  # Global environment variables
      ATLAS_URI: "mongodb://localhost:27017"
      DB_NAME: "cookbook_test"
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY_VALUE }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_VALUE }}
      PORT: "8000"
      PYTHONPATH: ${{ github.workspace }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies for testing
      run: |
        python -m pip install --upgrade pip
        pip install coverage pytest pytest-xdist pytest-timeout fastapi

    - name: Install API dependencies
      working-directory: ./api
      run: |
        pip install -r requirements.txt

    - name: List installed packages
      run: pip list
      
    - name: Show test directory structure
      run: find ./tests_akulka24 -type f | sort

    - name: Run tests with verbose output
      run: |
        python -m pytest ./tests_akulka24/ -v --showlocals --no-header --timeout=60

    - name: Run coverage
      if: always()  # Run even if tests fail
      run: |
        coverage run -m pytest ./tests_akulka24/
        coverage report -m

    - name: Upload coverage report
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pip install coveralls
        coveralls
